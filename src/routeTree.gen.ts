/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './pages/__root'
import { Route as AppLayoutRouteImport } from './pages/_app/layout'
import { Route as AppIndexRouteImport } from './pages/_app/index'
import { Route as AppLocationsRouteImport } from './pages/_app/locations'
import { Route as AppEpisodesRouteImport } from './pages/_app/episodes'

const AppLayoutRoute = AppLayoutRouteImport.update({
  id: '/_app',
  getParentRoute: () => rootRouteImport,
} as any)
const AppIndexRoute = AppIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppLayoutRoute,
} as any)
const AppLocationsRoute = AppLocationsRouteImport.update({
  id: '/locations',
  path: '/locations',
  getParentRoute: () => AppLayoutRoute,
} as any)
const AppEpisodesRoute = AppEpisodesRouteImport.update({
  id: '/episodes',
  path: '/episodes',
  getParentRoute: () => AppLayoutRoute,
} as any)

export interface FileRoutesByFullPath {
  '/episodes': typeof AppEpisodesRoute
  '/locations': typeof AppLocationsRoute
  '/': typeof AppIndexRoute
}
export interface FileRoutesByTo {
  '/episodes': typeof AppEpisodesRoute
  '/locations': typeof AppLocationsRoute
  '/': typeof AppIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_app': typeof AppLayoutRouteWithChildren
  '/_app/episodes': typeof AppEpisodesRoute
  '/_app/locations': typeof AppLocationsRoute
  '/_app/': typeof AppIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/episodes' | '/locations' | '/'
  fileRoutesByTo: FileRoutesByTo
  to: '/episodes' | '/locations' | '/'
  id: '__root__' | '/_app' | '/_app/episodes' | '/_app/locations' | '/_app/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AppLayoutRoute: typeof AppLayoutRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppLayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_app/': {
      id: '/_app/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AppIndexRouteImport
      parentRoute: typeof AppLayoutRoute
    }
    '/_app/locations': {
      id: '/_app/locations'
      path: '/locations'
      fullPath: '/locations'
      preLoaderRoute: typeof AppLocationsRouteImport
      parentRoute: typeof AppLayoutRoute
    }
    '/_app/episodes': {
      id: '/_app/episodes'
      path: '/episodes'
      fullPath: '/episodes'
      preLoaderRoute: typeof AppEpisodesRouteImport
      parentRoute: typeof AppLayoutRoute
    }
  }
}

interface AppLayoutRouteChildren {
  AppEpisodesRoute: typeof AppEpisodesRoute
  AppLocationsRoute: typeof AppLocationsRoute
  AppIndexRoute: typeof AppIndexRoute
}

const AppLayoutRouteChildren: AppLayoutRouteChildren = {
  AppEpisodesRoute: AppEpisodesRoute,
  AppLocationsRoute: AppLocationsRoute,
  AppIndexRoute: AppIndexRoute,
}

const AppLayoutRouteWithChildren = AppLayoutRoute._addFileChildren(
  AppLayoutRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  AppLayoutRoute: AppLayoutRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
